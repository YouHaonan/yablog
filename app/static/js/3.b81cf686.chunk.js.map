{"version":3,"sources":["pages/edit/style.js","pages/edit/index.js"],"names":["TitleOutContainer","styled","div","_templateObject","PostTitle","textarea","attrs","placeholder","_templateObject2","PostWrapper","_templateObject3","EditorWrapper","_templateObject4","Header","_templateObject5","NavHeader","_templateObject6","NavItem","_templateObject7","PostTags","_templateObject8","TagTextArea","_templateObject9","Editor","handleSubmit","title","body","tags","photoName","htmlContent","toHTML","ID","_this","props","match","params","id","length","delHtmlTag","submitPost","alert","_this2","this","_this$props","postID","token","handleBodyChange","handleTagChange","handleTitleChange","react_default","a","createElement","Link","to","className","onClick","Redirect","value","onChange","braft_editor_dist_default","media","uploadFn","param","upLoadFn","contentStyle","width","height","paddingRight","boxSizing","excludeControls","BraftEditor","createEditorState","getInitialPost","clearStatus","React","Component","connect","state","getIn","dispatch","actionCreators","editPost","editorState","changeBody","tag","changeTag","changeTitle","withRouter"],"mappings":"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","file":"static/js/3.b81cf686.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const TitleOutContainer = styled.div`\r\n    height:44px;\r\n    overflow:hidden;\r\n    margin-bottom:70px;\r\n`\r\n\r\nexport const PostTitle = styled.textarea.attrs({\r\n    placeholder: '请输入标题'\r\n})`\r\n    height: 44px;\r\n    min-height: 44px;\r\n    display: block;\r\n    width:102%;\r\n    border: 0;\r\n    font-size: 32px;\r\n    line-height: 32px;\r\n    font-weight: 600;\r\n    outline: none;\r\n    resize:none;\r\n    font-family:inherit;\r\n    padding-right:3%;\r\n` \r\n\r\nexport const PostWrapper = styled.div`\r\n    width: 800px;\r\n    margin: 0 auto; \r\n    padding-top: 70px;\r\n    padding-bottom:30px;\r\n`\r\nexport const EditorWrapper = styled.div`\r\n    width:100%;\r\n    overflow:hidden\r\n`\r\n\r\nexport const Header = styled.div`\r\n    position: relative;\r\n    height: 56px;\r\n    margin:0 auto;\r\n    border-bottom: 1px solid #f0f0f0;\r\n`;\r\n\r\nexport const NavHeader = styled.div`\r\n    position: relative;\r\n    height: 56px;\r\n    width: 900px;\r\n    margin:0 auto;\r\n`;\r\n\r\nexport const NavItem = styled.div`\r\n    cursor:pointer;\r\n    color:#555;\r\n    font-size:17px;\r\n    line-height: 56px;\r\n    padding: 0 ;\r\n    &.left {\r\n        float: left;\r\n    }\r\n    &.right{\r\n        float: right;\r\n    }\r\n    &.active{\r\n        color: #ea6f5a;\r\n    }\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n    padding-top: 180px;\r\n    font-size:25px;\r\n` \r\nexport const TagTextArea = styled.textarea.attrs({\r\n    placeholder: '标签之间用逗号分离'\r\n})` \r\n    font-family: inherit;\r\n    padding: 8px;\r\n    font-size:14px;\r\n    display:block;\r\n    margin-top:30px;\r\n    margin-bottom:50px;\r\n    width:100%;\r\n    height:100px;\r\n    resize:none;\r\n    box-sizing: border-box;\r\n    border:1 solid #dcdcdc;\r\n    border-radius: 2px;\r\n` \r\n","import 'braft-editor/dist/index.css';\r\nimport React from 'react';\r\nimport BraftEditor from 'braft-editor';\r\nimport { connect } from 'react-redux';\r\nimport { Link,withRouter } from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { actionCreators } from './store';\r\nimport { delHtmlTag } from '../../utils';\r\nimport {\r\n  TitleOutContainer,\r\n  PostWrapper,\r\n  Header,\r\n  NavHeader,\r\n  NavItem,\r\n  PostTags,\r\n  TagTextArea,\r\n  PostTitle,\r\n  EditorWrapper\r\n} from './style'\r\n\r\nclass Editor extends React.Component {\r\n  render() {\r\n    const {postID,tags,title,token,body,photoName,handleBodyChange,handleTagChange,handleTitleChange}=this.props\r\n    const contentStyle={\r\n      width:'103%',\r\n      height:'700px',\r\n      paddingRight:'20px',\r\n      boxSizing:'border-box'\r\n    }\r\n    const excludeControls = [\r\n        'font-family', 'letter-spacing', 'subscript',\r\n       'emoji', 'text-indent','hr','separator','superscript','text-align'\r\n    ]\r\n    const myUploadFn = (param) => this.props.upLoadFn(param)\r\n    \r\n    if (token){\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <NavHeader>\r\n              <Link to='/'>\r\n              <NavItem className='left'>\r\n                  回到首页\r\n              </NavItem>\r\n              </Link>\r\n              <NavItem \r\n              className='right'\r\n              onClick={()=>this.handleSubmit(title,body, tags,photoName)}\r\n              >发布</NavItem>\r\n          </NavHeader>\r\n        </Header>\r\n        {postID?\r\n        <Redirect to={'/detail/' + postID}/>:\r\n        <PostWrapper>\r\n          <TitleOutContainer>\r\n            <PostTitle\r\n            value={title}\r\n            onChange={handleTitleChange}\r\n            />\r\n          </TitleOutContainer>\r\n          <EditorWrapper>\r\n          <BraftEditor \r\n          media={{uploadFn:myUploadFn}}\r\n          contentStyle={contentStyle}\r\n          excludeControls={excludeControls}\r\n          onChange={handleBodyChange}\r\n          value={typeof(body)==='string'?\r\n            BraftEditor.createEditorState(body):body} \r\n          />\r\n          </EditorWrapper>\r\n          <PostTags>\r\n              添加标签\r\n            <TagTextArea\r\n            value={tags}\r\n            onChange={handleTagChange}\r\n            />\r\n          </PostTags>\r\n        </PostWrapper>\r\n        }\r\n      </div>\r\n    )}else{\r\n      return <Redirect to='/'/>\r\n    }\r\n  }\r\n\r\n  handleSubmit=(title,body,tags,photoName)=>{\r\n    const htmlContent = body.toHTML()\r\n    const ID= this.props.match.params.id\r\n    \r\n    if(title.length===0||delHtmlTag(htmlContent).length===0){\r\n      alert('标题和文章内容不能为空！')\r\n      return;\r\n    }else{\r\n      this.props.submitPost(title, htmlContent,tags,ID,photoName)\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    const ID = this.props.match.params.id\r\n    if (ID){\r\n      this.props.getInitialPost(ID)\r\n    }else{\r\n        return;\r\n      }\r\n    }\r\n  componentWillUnmount() {\r\n    this.props.clearStatus()\r\n  }\r\n }\r\n\r\nconst mapState = (state) => ({\r\n  photoName:state.getIn(['editor','photoName']),\r\n  postID:state.getIn(['editor','postID']),\r\n  token:state.getIn(['login', 'token']),\r\n  tags:state.getIn(['editor','tags']),\r\n  title:state.getIn(['editor','title']),\r\n  body:state.getIn(['editor','body']),\r\n})\r\n  \r\nconst mapDispatch = (dispatch) => ({\r\n  clearStatus(){\r\n    dispatch(actionCreators.clearStatus())\r\n  },\r\n  submitPost(title, htmlContent,tags,ID,photoName){\r\n    dispatch(actionCreators.editPost(title, htmlContent,tags,ID,photoName))\r\n  },\r\n  upLoadFn(param){\r\n    dispatch(actionCreators.upLoadFn(param))\r\n  },\r\n  getInitialPost(ID){\r\n    dispatch(actionCreators.getInitialPost(ID))\r\n  },\r\n  handleBodyChange(editorState){\r\n    dispatch(actionCreators.changeBody(editorState))\r\n  },\r\n  handleTagChange(tag){\r\n    dispatch(actionCreators.changeTag(tag))\r\n  },\r\n  handleTitleChange(title){\r\n    dispatch(actionCreators.changeTitle(title))\r\n  }\r\n})\r\n  \r\nexport default connect(mapState, mapDispatch)(withRouter(Editor));"],"sourceRoot":""}